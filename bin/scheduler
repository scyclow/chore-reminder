#!/usr/bin/env node

/*
  jobs scheduled at https://scheduler.heroku.com/dashboard
  Should run DAILY at the following times IN UTC:
    23:00 (UTC) => 18:00 (ET)
    23:30 (UTC) => 18:30 (ET)
    01:00 (UTC) => 20:00 (ET)
    03:00 (UTC) => 22:00 (ET)
*/

const moment = require('moment');
const twilio = require('twilio');
const _ = require('lodash');

const { getData, setData, isWeekComplete, confirmWeek } = require('../data');

const {
  TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN,
  STEVE_NUMBER, MAX_NUMBER, TOM_NUMBER
} = process.env;


const today = moment().subtract(5, 'hours'); // CONVERT TO EASTERN (script ran in UTC)
const daysToNotify = [4,5,6,0];
// if (!_.includes(daysToNotify, today.day())) return;


const phoneNumbers = {
  steve: STEVE_NUMBER,
  tom: TOM_NUMBER,
  max: MAX_NUMBER
};

[1,2,3,4,5,6, ``,``, `max`]

// TODO -- add pictures/memes
const cleanAptMessage = (name) => _.sample(_.shuffle([
  `clean the fuckin' apartment!`,
  `clean clean clean clean clean clean clean clean clean.`,
  `cleaning sets the soul free.`,
  `you're a dirty, dirty boy.`,
  `Take out the fuckin trash or something`,
  `Why don't you make yourself useful and wash the goddamn floor??`,
  `Hi deary, would you be a sweatheart and clean the apartment`,
  `Dearest ${name}, please be kind and tiddy up.`
  `clean the fucking apartment, you jerk`,
  `clean the apartment.`,
  `Hey ${name}, clean the apartment.`,
  `do the cleaning thing you're supposed to do.`,
  `clean the place. c'mon, it'll only take 30 minutes.`,
  `clean`,
  `CLLLLLLLEEEEEEEEEEEEEEAAAAAAAAAAAAAAAANNNNNNNNNNNNN`,
  `you know the drill`,
  `${name}. clean. now.`,
  `if you clean the apartment, then the aparment will be clean.`,
  `${name}${name}${name} cleancleanclean`,
  `you're up for cleaning.`,
  `C\nL\nE\nA\nN\n!`,
  `CCCC\nLLLL\nEEEE\nAAAA\nNNNN\n!!!!`,
  `Why haven't you cleaned yet?`,
  `you clean the place yet?`,
  `clean apartment`,
  `The place is a dump, and it smells bad. But good news! You're going to clean it, and then it'll be awsome.`,
  `Listen guy, you take care of that thing?`,
  `You got some fuckin' nerve yoo stoonad. I want that thing done and done now.`,
  `cleanliness is godliness`
]));

function getCurrentWeek(weeks) {
  const currentWeekNumber = today.day() > 0
    ? today.isoWeek()
    : today.isoWeek() - 1; // if sunday, count towards previous week

  return _.find(weeks, week => week.weekNumber === currentWeekNumber);
}

function sendTextMessage (phoneNumber, msg) {
  const client = new twilio.RestClient(TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN);

  client.messages.create({
    body: msg,
    to: phoneNumber,
    from: '+19179245379'
  }, (err, message) => {
    if (err) return console.log(err);
    console.log(`Text sent to [${phoneNumber}] with message sid: ${message.sid}`);
  });
}

getData((err, data) => {
  if (err) {
    // TODO text steve
    return console.log(err);
  }
  const currentWeek = getCurrentWeek(data);

  if (!currentWeek) {
    return console.log(new Error('Could not find current week. Here is the data:', JSON.stringify(data, null, 3)))
  }

  if (isWeekComplete(currentWeek.weekNumber)) return;

  const phoneNumber = phoneNumbers[currentWeek.name];
  sendTextMessage(phoneNumber, cleanAptMessage(currentWeek.name));

  console.log(`Scheduler ran at ${today.format('dddd, MMMM Do YYYY, HH:mm:ss')} Eastern`);
});
